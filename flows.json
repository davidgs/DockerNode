[
  {
    "id": "15570129.70a46f",
    "type": "tab",
    "label": "Stars",
    "disabled": false,
    "info": ""
  },
  {
    "id": "c98839a0.d0e228",
    "type": "slack-config",
    "z": "",
    "name": "Slack"
  },
  {
    "id": "7cd6cb0f.dd278c",
    "type": "http response",
    "z": "15570129.70a46f",
    "name": "Stars response",
    "statusCode": "200",
    "headers": {},
    "x": 300,
    "y": 240,
    "wires": []
  },
  {
    "id": "1c6be089.2a3ee7",
    "type": "function",
    "z": "15570129.70a46f",
    "name": "verify",
    "func": "const TOKEN = env.get('HASH_TOKEN')\nconst crypto = global.get('cryptojs')\nnewMsg = {}\n\nvar hash = \"sha1=\" + crypto.HmacSHA1(JSON.stringify(msg.req.body), TOKEN).toString(crypto.enc.Hex);\nif(hash === msg.req.headers['x-hub-signature']){\n    newMsg.vrfy = true\n} else {\n    newMsg.vrfy = false\n}\n\nnewMsg.payload = {}\nif(msg.payload.action == \"created\"){\n    newMsg.text = \":tada: A new :star: for \" + msg.payload.repository.name + \" from user \" + msg.payload.sender.login + \"! :confetti_ball:\"\n} else {\n    newMsg.text = \":x: \" + msg.payload.sender.login + \" deleted their :star: from \" + msg.payload.repository.name + \" :cry:\"\n}\n// newMsg.sum = sum\nnewMsg.hashSum = hash\nnewMsg.payload.text = newMsg.text\nnewMsg.payload.user = msg.payload.sender.login\nnewMsg.payload.action = msg.payload.action\nnewMsg.payload.content = msg.payload\nreturn newMsg;\n",
    "outputs": 1,
    "noerr": 0,
    "x": 270,
    "y": 160,
    "wires": [
      [
        "da76a9cf.e493"
      ]
    ]
  },
  {
    "id": "eefc6f11.40d49",
    "type": "http request",
    "z": "15570129.70a46f",
    "name": "Slacker",
    "method": "POST",
    "ret": "txt",
    "paytoqs": false,
    "url": "",
    "tls": "dfcc6f2.058499",
    "persist": false,
    "proxy": "",
    "authType": "bearer",
    "x": 760,
    "y": 200,
    "wires": [
      [
        "d32b49c2.33c8b"
      ]
    ]
  },
  {
    "id": "b13de4d1.b30438",
    "type": "debug",
    "z": "15570129.70a46f",
    "name": "Rejected",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "true",
    "targetType": "full",
    "x": 560,
    "y": 360,
    "wires": []
  },
  {
    "id": "d37fdeaa.012e1",
    "type": "http in",
    "z": "15570129.70a46f",
    "name": "stars",
    "url": "/stars",
    "method": "post",
    "upload": false,
    "swaggerDoc": "",
    "x": 110,
    "y": 160,
    "wires": [
      [
        "7cd6cb0f.dd278c",
        "1c6be089.2a3ee7"
      ]
    ]
  },
  {
    "id": "da76a9cf.e493",
    "type": "switch",
    "z": "15570129.70a46f",
    "name": "",
    "property": "vrfy",
    "propertyType": "msg",
    "rules": [
      {
        "t": "true"
      },
      {
        "t": "false"
      }
    ],
    "checkall": "true",
    "repair": false,
    "outputs": 2,
    "x": 410,
    "y": 200,
    "wires": [
      [
        "94cddeb6.bc2d3",
        "bd15ef87.1979b"
      ],
      [
        "b13de4d1.b30438"
      ]
    ]
  },
  {
    "id": "94cddeb6.bc2d3",
    "type": "function",
    "z": "15570129.70a46f",
    "name": "orbit",
    "func": "const TOKEN=env.get('ORBIT_TOKEN')\nconst url = 'https://app.orbit.love/questdb/activities?api_key=' + TOKEN\nconst orbit = {\n  \"title\": \"Auto-Star\",\n  \"description\": (msg.payload.action === 'deleted' ? \"UNStarred repository \" : \"Starred Repository \") + msg.payload.content.repository.name,\n  \"link\": msg.payload.content.repository.html_url,\n  \"score\": 2,\n  \"activity_type\": \"repository:star\",\n  \"occurred_at\": msg.payload.content.starred_at,\n\t\"member\": {\n    \"github\": msg.payload.content.sender.login,\n    \"email\": \"\"\n\t}\n}\nvar headers = {}\nheaders[\"Content-Type\"] = \"application/json\"\nheaders[\"Accept\"] = \"application/json\"\nmsg.url = url\nmsg.payload = orbit\nmsg.headers = headers\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 610,
    "y": 260,
    "wires": [
      [
        "2b55a7b0.33edf",
        "eefc6f11.40d49"
      ]
    ]
  },
  {
    "id": "2b55a7b0.33edf",
    "type": "http request",
    "z": "15570129.70a46f",
    "name": "POST Orbit",
    "method": "POST",
    "ret": "txt",
    "paytoqs": false,
    "url": "",
    "tls": "dfcc6f2.058499",
    "persist": false,
    "proxy": "",
    "authType": "",
    "x": 770,
    "y": 320,
    "wires": [
      [
        "8879b1d0.cf03"
      ]
    ]
  },
  {
    "id": "8879b1d0.cf03",
    "type": "debug",
    "z": "15570129.70a46f",
    "name": "Orbit-out",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "x": 980,
    "y": 320,
    "wires": []
  },
  {
    "id": "d32b49c2.33c8b",
    "type": "debug",
    "z": "15570129.70a46f",
    "name": "Slack-out",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "x": 960,
    "y": 200,
    "wires": []
  },
  {
    "id": "bd15ef87.1979b",
    "type": "function",
    "z": "15570129.70a46f",
    "name": "Slack",
    "func": "const ENDPOINT=env.get('SLACK_TOKEN');\nconst url = \"https://hooks.slack.com/services/\" + ENDPOINT\nmsg.url = url\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 600,
    "y": 200,
    "wires": [
      [
        "eefc6f11.40d49"
      ]
    ]
  }
]